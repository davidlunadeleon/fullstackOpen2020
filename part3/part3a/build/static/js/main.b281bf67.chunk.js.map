{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changeNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACC,wBAAIC,UAAU,QACZJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCNjCK,EAAU,kCAuBD,EArBA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GACpB,OAAOA,EAASC,SAkBH,EAdA,SAACC,GAEf,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GACpB,OAAOA,EAASC,SAWH,EAPA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GACpB,OAAOA,EAASC,SCXHK,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAED,yBAAKd,UAAU,SAASc,ICE1BC,G,MAAS,WAOd,OACC,yBAAKC,MAPc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKT,6BACA,mGAwFYC,EAjFH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,iBAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,MAJhC,mBAIVO,EAJU,KAIIC,EAJJ,KAMjBC,qBAAU,WACTC,IAAqBzB,MAAK,SAAC0B,GAC1BT,EAASS,QAER,IAEH,IAsCMC,EAAcP,EACjBJ,EACAA,EAAMY,QAAO,SAACtC,GAAD,OAA6B,IAAnBA,EAAKG,aAE/B,OACC,6BACC,qCACA,kBAAC,EAAD,CAAce,QAASc,IACvB,6BACC,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACOA,EAAU,YAAc,QAGhC,4BACEO,EAAYE,KAAI,SAACvC,GAAD,OAChB,kBAAC,EAAD,CACCwC,IAAKxC,EAAKe,GACVf,KAAMA,EACNC,iBAAkB,kBAvCI,SAACc,GAC3B,IAAMf,EAAO0B,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAU,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAC/CgC,EACSpB,EAAI4B,GACXjC,MAAK,SAACC,GACNgB,EACCD,EAAMa,KAAI,SAACvC,GAAD,OAAWA,EAAKe,KAAOA,EAAKf,EAAOW,SAG9CiC,OAAM,SAACC,GACPZ,EAAgB,aAAD,OACDjC,EAAKK,QADJ,2CAGfyC,YAAW,WACVb,EAAgB,QACd,KACHN,EAASD,EAAMY,QAAO,SAACI,GAAD,OAAOA,EAAE3B,KAAOA,SAsBZgC,CAAmB/C,EAAKe,WAInD,0BAAMiC,SAxDQ,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClB9C,QAASuB,EACTwB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAE5BrB,EAAmBgB,GAAYzC,MAAK,SAACC,GACpCgB,EAASD,EAAM+B,OAAO9C,IACtBkB,EAAW,SAgDV,2BAAO6B,MAAO9B,EAAS+B,SA7DD,SAACV,GACzBpB,EAAWoB,EAAMW,OAAOF,UA6DtB,4BAAQG,KAAK,UAAb,SAED,kBAAC,EAAD,QCjGHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b281bf67.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n\tconst label = note.important ? 'make not important' : 'make important';\n\treturn (\n\t\t<li className=\"note\">\n\t\t\t{note.content}\n\t\t\t<button onClick={toggleImportance}>{label}</button>\n\t\t</li>\n\t);\n};\n\nexport default Note;\n","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/notes';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then((response) => {\n\t\treturn response.data;\n\t});\n};\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then((response) => {\n\t\treturn response.data;\n\t});\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then((response) => {\n\t\treturn response.data;\n\t});\n};\n\nexport default {\n\tgetAll,\n\tcreate,\n\tupdate\n};\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t\treturn null;\n\t}\n\treturn <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\n\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\n\nimport './index.css';\n\nconst Footer = () => {\n\tconst footerStyle = {\n\t\tcolor: 'green',\n\t\tfontStyle: 'italic',\n\t\tfontSize: 16\n\t};\n\n\treturn (\n\t\t<div style={footerStyle}>\n\t\t\t<br />\n\t\t\t<em>\n\t\t\t\tNote app, Department of Computer Science, University of Helsinki\n\t\t\t</em>\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNote, setNewNote] = useState('a new note...');\n\tconst [showAll, setShowAll] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then((initialNotes) => {\n\t\t\tsetNotes(initialNotes);\n\t\t});\n\t}, []);\n\n\tconst handleNoteChange = (event) => {\n\t\tsetNewNote(event.target.value);\n\t};\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault();\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5\n\t\t};\n\t\tnoteService.create(noteObject).then((response) => {\n\t\t\tsetNotes(notes.concat(response));\n\t\t\tsetNewNote('');\n\t\t});\n\t};\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((n) => n.id === id);\n\t\tconst changeNote = { ...note, important: !note.important };\n\t\tnoteService\n\t\t\t.update(id, changeNote)\n\t\t\t.then((response) => {\n\t\t\t\tsetNotes(\n\t\t\t\t\tnotes.map((note) => (note.id !== id ? note : response))\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`the note '${note.content}' was already deleted from the server.`\n\t\t\t\t);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t}, 5000);\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\n\t\t\t});\n\t};\n\n\tconst notesToShow = showAll\n\t\t? notes\n\t\t: notes.filter((note) => note.important === true);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map((note) => (\n\t\t\t\t\t<Note\n\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}